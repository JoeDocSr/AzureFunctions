// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Empower.DataAccess.Entities.Empower;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

#nullable disable

namespace Empower.DataAccess.ApplicationContext.Empower.Configurations
{
    public partial class TreatmentQuestionToDataTagConnectorConfiguration : IEntityTypeConfiguration<TreatmentQuestionToDataTagConnector>
    {
        public void Configure(EntityTypeBuilder<TreatmentQuestionToDataTagConnector> entity)
        {
            entity.HasKey(e => new { e.TagConfigurationId, e.TreatmentQuestionConfigId, e.Id }).HasName("PK_TreatmentQuestionToTagConfigurationConnector");

            entity.ToTable("TreatmentQuestionToDataTagConnector");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();

            entity.HasOne(d => d.TagConfiguration).WithMany(p => p.TreatmentQuestionToDataTagConnectors)
            .HasForeignKey(d => d.TagConfigurationId)
            .OnDelete(DeleteBehavior.ClientSetNull)
            .HasConstraintName("FK_TreatmentQuestionToDataTagConnector_DataTags");

            entity.HasOne(d => d.TreatmentQuestionConfig).WithMany(p => p.TreatmentQuestionToDataTagConnectors)
            .HasForeignKey(d => d.TreatmentQuestionConfigId)
            .OnDelete(DeleteBehavior.ClientSetNull)
            .HasConstraintName("FK_TreatmentQuestionToDataTagConnector_TreatmentQuestions");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TreatmentQuestionToDataTagConnector> entity);
    }
}
