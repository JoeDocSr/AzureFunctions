// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Empower.DataAccess.Entities.Eviti;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

#nullable disable

namespace Empower.DataAccess.ApplicationContext.Eviti.Configurations
{
    public partial class ContactPayerLineOfBusinessConfiguration : IEntityTypeConfiguration<ContactPayerLineOfBusiness>
    {
        public void Configure(EntityTypeBuilder<ContactPayerLineOfBusiness> entity)
        {
            entity.HasKey(e => e.Guid);

            entity.ToTable("ContactPayerLineOfBusiness");

            entity.Property(e => e.Guid).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CheckProvFileSOS).HasDefaultValueSql("((0))");
            entity.Property(e => e.CreatedBy)
            .HasMaxLength(256)
            .IsUnicode(false)
            .HasDefaultValueSql("('')");
            entity.Property(e => e.CreatedDate)
            .HasDefaultValueSql("(getdate())")
            .HasColumnType("datetime");
            entity.Property(e => e.DEReturnAddressCity)
            .HasMaxLength(100)
            .IsUnicode(false);
            entity.Property(e => e.DEReturnAddressRecipient)
            .HasMaxLength(100)
            .IsUnicode(false);
            entity.Property(e => e.DEReturnAddressStreet1)
            .HasMaxLength(500)
            .IsUnicode(false);
            entity.Property(e => e.DEReturnAddressStreet2)
            .HasMaxLength(500)
            .IsUnicode(false);
            entity.Property(e => e.EvitiDisplayName)
            .HasMaxLength(100)
            .IsUnicode(false);
            entity.Property(e => e.ExternalIdentifier).HasDefaultValueSql("(newid())");
            entity.Property(e => e.GenerateAuthID)
            .IsRequired()
            .HasDefaultValueSql("('0')");
            entity.Property(e => e.IsDefault)
            .IsRequired()
            .HasDefaultValueSql("((1))");
            entity.Property(e => e.ModifiedBy)
            .HasMaxLength(256)
            .IsUnicode(false)
            .HasDefaultValueSql("('')");
            entity.Property(e => e.ModifiedDate)
            .HasDefaultValueSql("(getdate())")
            .HasColumnType("datetime");
            entity.Property(e => e.Name)
            .HasMaxLength(50)
            .IsUnicode(false);
            entity.Property(e => e.PreventAlertMessage)
            .HasMaxLength(500)
            .IsUnicode(false);
            entity.Property(e => e.ProviderExclusionMessage)
            .HasMaxLength(500)
            .IsUnicode(false);
            entity.Property(e => e.ShowAddDrugButton)
            .IsRequired()
            .HasDefaultValueSql("((1))");
            entity.Property(e => e.Version)
            .HasMaxLength(50)
            .IsUnicode(false)
            .HasDefaultValueSql("((1.0))");

            entity.HasOne(d => d.Payer).WithMany(p => p.ContactPayerLineOfBusinesses)
            .HasForeignKey(d => d.PayerGuid)
            .OnDelete(DeleteBehavior.ClientSetNull)
            .HasConstraintName("FK_ContactPayerLineOfBusiness_ContactPayer");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<ContactPayerLineOfBusiness> entity);
    }
}
